Given an array nums, write a function to move all 0's to the end of it while maintaining the relative order of the non-zero elements.

Example:

Input: [0,1,0,3,12]
Output: [1,3,12,0,0]

Note:

You must do this in-place without making a copy of the array.
Minimize the total number of operations.



class Solution {
public:
    void moveZeroes(vector<int>& nums) {
        int next = 0;
        for (auto n : nums) {
            if (n != 0) nums[next++] = n;
        }
        fill(begin(nums)+next, end(nums), 0);
    }
};


Approach 2
class Solution {
public:
    void moveZeroes(vector<int>& ar) {
        int len  = ar.size();
        int i=0,j=1;
        while(j<len){
            if(ar[i]!=0){
                i++;
                j++;
            }else if(ar[i]==0 && ar[j]!=0){
                swap(ar[i],ar[j]);
            }else{
                j++;
            }
        }
        
    }
};
