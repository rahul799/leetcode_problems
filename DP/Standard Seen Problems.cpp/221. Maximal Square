

221. Maximal Square
Medium

3299

86

Add to List

Share
Given a 2D binary matrix filled with 0's and 1's, find the largest square containing only 1's and return its area.

Example:

Input: 

1 0 1 0 0
1 0 1 1 1
1 1 1 1 1
1 0 0 1 0

Output: 4





class Solution {
public:
    int maximalSquare(vector<vector<char>>& matrix) {
        if (matrix.empty()) return 0;
        int m = matrix.size();
        int n = matrix[0].size();
        vector<vector<int>> dp( m, vector<int>(n, 0));
        if(m==0)
            return 0;
        int maxWidth = 0;// travelling columns
        
        for(int i = 0; i <m; i++){
            if(matrix[i][0] == '1'){
            dp[i][0] = 1;
            maxWidth = 1;
            }
        }
        // checking column
        for(int j = 0; j <n ; j++){
            if(matrix[0][j] == '1'){
                dp[0][j] = 1;
                maxWidth = 1;
            }
        }
        
        for(int i = 1; i < m; i++){
            for(int j= 1; j < n; j++){
                if(matrix[i][j] == '1'){
                    dp[i][j] = min(min(dp[i-1][j], dp[i][j-1]), dp[i-1][j-1]) +1;
                   
                } 
                maxWidth = max(dp[i][j], maxWidth);
            }
        }
        return maxWidth* maxWidth;   
    }
};
