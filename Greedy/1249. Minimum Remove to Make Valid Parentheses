1249. Minimum Remove to Make Valid Parentheses
Medium

Add to List

Share
Given a string s of '(' , ')' and lowercase English characters. 

Your task is to remove the minimum number of parentheses ( '(' or ')', in any positions ) so that the resulting parentheses string is valid and return any valid string.

Formally, a parentheses string is valid if and only if:

It is the empty string, contains only lowercase characters, or
It can be written as AB (A concatenated with B), where A and B are valid strings, or
It can be written as (A), where A is a valid string.



class Solution {
public:
     string minRemoveToMakeValid(string s) {
        int open=0;
        string t;
        for(int i=0;i<s.size();i++)
        {
            if(s[i]=='(')open++;
            else if(s[i]==')')
            {
                if(open==0)continue;
                open--;
            }
            t+=s[i];
        }
         // in case our string is having extra opening paranthesis
        string ans;
        for(int i=t.size()-1;i>=0;i--)
        {
            if(t[i]=='(' && open>0)
            {
                open--;
                continue;
            }
            ans+=t[i];
        }
        reverse(ans.begin(),ans.end());
        return ans;
    } 

};
