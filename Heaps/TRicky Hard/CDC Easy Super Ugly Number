
313. Super Ugly Number
Medium

812

163

Add to List

Share
Write a program to find the nth super ugly number.

Super ugly numbers are positive numbers whose all prime factors are in the given prime list primes of size k.

Example:

Input: n = 12, primes = [2,7,13,19]
Output: 32 
Explanation: [1,2,4,7,8,13,14,16,19,26,28,32] is the sequence of the first 12 
             super ugly numbers given primes = [2,7,13,19] of size 4.
Note:

1 is a super ugly number for any given primes.
The given numbers in primes are in ascending order.
0 < k ≤ 100, 0 < n ≤ 106, 0 < primes[i] < 1000.
The nth super ugly number is guaranteed to fit in a 32-bit signed integer.




   class Solution {
public:
    int nthSuperUglyNumber(int n, vector<int>& primes) {
        unordered_set<long long> alreadyCame;
        priority_queue<long long, vector<long long>, greater<long long>> pq;
        alreadyCame.insert(1);
        pq.push(1);
        long long current;
        
        while(n--){
            current = pq.top();
            pq.pop();
            
            
            for(int prime: primes){
                long long temp = prime*current;
                
                
                if(!alreadyCame.count(temp)){
                    alreadyCame.insert(temp);
                    pq.push(temp);
                }
            }
        }
        
        return (int)current;
    }
};
