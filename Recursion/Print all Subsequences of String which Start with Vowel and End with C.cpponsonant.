Given a string return all possible subsequences which start with vowel and end with consonant. A String is a subsequence of a given String, that is generated by deleting some character of a given string without changing its order.
Examples:

Input : 'abc'
Output : ab, ac, abc

Input : 'aab'
Output : ab, aab



// C++ program to generate all the subse-quence 
// starting with vowel and ending with consonant. 
#include <bits/stdc++.h> 
using namespace std; 

// Set to store all the subsequences 
set<string> st; 

// Utility method to check vowel 
bool isVowel(char c) 
{ 
	return (c == 'a' or c == 'e' or 
			c == 'i' or c == 'o' or 
			c == 'u'); 
} 

// Utility method to check consonant 
bool isConsonant(char c) 
{ 
	return !isVowel(c); 
} 

// It computes all the possible substring that 
// starts with vowel and end with consonent 
void subsequence(string str) 
{ 
	// iterate over the entire string 
	for (int i = 0; i < str.length(); i++) 
	{ 
		// test ith character for vowel 
		if (isVowel(str[i])) 
		{ 
			// if the ith character is vowel 
			// iterate from end of the string 
			// and check for consonant. 
			for (int j = str.length() - 1; j >= i; j--) 
			{ 
				// test jth character for consonant. 
				if (isConsonant(str[j])) 
				{ 
					// once we get a consonant add it to 
					// the hashset 
					string str_sub = str.substr(i, j + 1); 
					st.insert(str_sub); 

					// drop each character of the substring 
					// and recur to generate all subsequence 
					// of the substring 
					for (int k = 1; k < str_sub.length() - 1; k++) 
					{ 
						string sb = str_sub; 
						sb.erase(sb.begin() + k); 
						subsequence(sb); 
					} 
				} 
			} 
		} 
	} 
} 

// Driver Code 
int main() 
{ 
	string s = "xabcef"; 
	subsequence(s); 

	for (auto i : st) 
		cout << i << " "; 
	cout << endl; 

	return 0; 
} 

// This code is contributed by 
// sanjeev2552 
